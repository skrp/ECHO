#!/usr/local/bin/perl
use strict; use warnings;
use File::Move 'move()';
use Digest::SHA;
#
######################################
# KRIPKEY - netwide ec key generation
# Over-Time : Diversified-Sources : Hand-Crafted
# Confined Lord no shell daemon
# W/R PERM : /krip/.$demon/ /krip/keys/ /dev/random /bin/openssl

my $log = '/usr/home/geni/o/ENTROPY_GEN.log';
open(my $Lfh, '>>', $log);

open(my $cfh, '<', '/krip/curves');
my @curves = <$cfh>; 
chomp @curves; close $cfh;

my $tpath ="/krip/.$$_tmp";
my $path = '/krip/krip/';

while (1)
{
	rotate();
# FORCE RESEED
	`echo '' > /dev/random`; 
	my $i = 10;
	while ($i > 0)
		{ $i--; rotate(); }
}
# SUBS ############################################
sub rotate
{
	sleep 100;
	my $curve = c_up();
	unlink $tpath;
	`openssl ecparam -name prime256v1 -genkey -out $tpath -param_enc explicit -rand /krip/entropy`; 
	my $sha = file_digest($tpath);
	my $new = $path.$sha;
	move($tpath, $new);
}
sub c_up
{
	my $curve = $curves[rand @curves];
	return $curve;
}
sub file_digest {
	my ($filename) = @_;
	my $digester = Digest::SHA->new('sha256');
	$digester->addfile($filename, 'b');
	return $digester->hexdigest;
}
